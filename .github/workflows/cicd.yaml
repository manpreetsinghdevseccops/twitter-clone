name: CI/CD Pipeline
on:
  push:
    branches:
      - main
jobs:
  owasp-dependency-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
      - name: Install dependencies
        run: npm ci
      - name: Run OWASP Dependency-Check
        uses: dependency-check/Dependency-Check_Action@main
        env:
          JAVA_HOME: /opt/jdk
        with:
          project: myorg-nodejs-project
          scanPath: .
          format: HTML
          outDir: reports
      - name: Upload report
        uses: actions/upload-artifact@v4
        with:
          name: dependency-check-report
          path: reports/dependency-check-report.html
  unit-testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm install
      - name: Unit Testing
        run: null
  build:
    runs-on: ubuntu-latest
    needs: unit-testing
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1
      - name: Login to Amazon ECR
        run: |
          ACCOUNT_ID=$(aws sts get-caller-identity --query 'Account' --output text)
          echo "ACCOUNT_ID=$ACCOUNT_ID" >> $GITHUB_ENV
          REPO_URI=${ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com
          echo "REPO_URI=$REPO_URI" >> $GITHUB_ENV
          aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin ${ACCOUNT_ID}.dkr.ecr.ap-south-1.amazonaws.com
      - name: Create ECR repository
        run: |
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          if ! aws ecr describe-repositories --region ap-south-1 --repository-names $REPO_NAME 2>/dev/null; then
            aws ecr create-repository --region ap-south-1 --repository-name $REPO_NAME
          fi
      - name: Build and push Docker image
        run: |
          REPO_NAME=${GITHUB_REPOSITORY##*/}
          docker build -t $REPO_NAME:latest .
          docker tag $REPO_NAME:latest ${REPO_URI}/$REPO_NAME:latest
          docker tag $REPO_NAME:latest ${REPO_URI}/$REPO_NAME:${GITHUB_SHA::7}
          docker push ${REPO_URI}/$REPO_NAME:latest
          docker push ${REPO_URI}/$REPO_NAME:${GITHUB_SHA::7}
      - name: Verify deployment
        run: |
          docker images
          echo "Deployment successful"